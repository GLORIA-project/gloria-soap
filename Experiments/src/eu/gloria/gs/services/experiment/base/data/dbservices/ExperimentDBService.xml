<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="eu.gloria.gs.services.experiment.base.data.dbservices.ExperimentDBService">

	<update id="createExperimentTable">
		CREATE TABLE IF NOT EXISTS
		`gloria_services`.`experiment` (
		`idexperiment` int(11) NOT NULL
		AUTO_INCREMENT,
		`name` varchar(100) NOT
		NULL,
		`author` varchar(40) NOT
		NULL,
		`description` varchar(128) DEFAULT
		NULL,
		`type` varchar(10) NOT
		NULL,
		PRIMARY KEY (`idexperiment`),
		UNIQUE
		KEY `name_UNIQUE` (`name`),
		KEY `author_fk` (`author`),
		CONSTRAINT
		`author_fk` FOREIGN KEY
		(`author`) REFERENCES
		`gloria_services`.`user` (`name`) ON
		DELETE NO
		ACTION ON UPDATE NO
		ACTION
		) ENGINE=InnoDB DEFAULT CHARSET=utf8
	</update>

	<update id="createReservationTable">
		CREATE TABLE IF NOT EXISTS
		`gloria_services`.`reservation` (
		`idreservation` int(11) NOT NULL
		AUTO_INCREMENT,
		`user` varchar(40) NOT NULL,
		`experiment` int(11) NOT
		NULL,
		`begin` datetime NOT NULL,
		`end` datetime DEFAULT NULL,
		PRIMARY KEY
		(`idreservation`),
		KEY `experiment_fk` (`experiment`),
		KEY `user_res_fk`
		(`user`),
		KEY `experiment_res_fk` (`experiment`),
		CONSTRAINT
		`experiment_res_fk` FOREIGN KEY (`experiment`) REFERENCES
		`gloria_services`.`experiment` (`idexperiment`) ON DELETE CASCADE ON
		UPDATE CASCADE,
		CONSTRAINT `user_res_fk` FOREIGN KEY (`user`)
		REFERENCES `gloria_services`.`user`
		(`name`) ON DELETE CASCADE ON
		UPDATE CASCADE
		) ENGINE=InnoDB AUTO_INCREMENT=53 DEFAULT CHARSET=utf8
	</update>

	<update id="createRTReservationTable">
		CREATE TABLE IF NOT EXISTS
		`gloria_services`.`rt_reservation` (
		`reservation_id` int(11) NOT NULL,
		`rt_name` varchar(50) NOT NULL,
		PRIMARY KEY
		(`reservation_id`,`rt_name`),
		KEY `reservation_id_fk`
		(`reservation_id`),
		KEY `rt_id_fk` (`rt_name`),
		CONSTRAINT `rt_id_fk`
		FOREIGN KEY (`rt_name`) REFERENCES `gloria_services`.`rt` (`name`) ON
		DELETE
		CASCADE ON UPDATE CASCADE,
		CONSTRAINT `reservation_id_fk` FOREIGN
		KEY (`reservation_id`) REFERENCES
		`gloria_services`.`reservation`
		(`idreservation`) ON DELETE CASCADE ON UPDATE CASCADE
		) ENGINE=InnoDB
		DEFAULT CHARSET=utf8
	</update>

	<update id="createExperimentParameterTable">
		CREATE TABLE IF NOT EXISTS
		`gloria_services`.`experiment_parameter` (
		`experiment` int(11) NOT
		NULL,
		`parameter` varchar(45) CHARACTER SET utf8 NOT NULL,
		`type`
		varchar(45) CHARACTER SET utf8 NOT NULL,
		`idparameter` int(11) NOT
		NULL
		AUTO_INCREMENT,
		PRIMARY KEY (`idparameter`,`experiment`,`parameter`),
		KEY
		`param_experiment_fk`
		(`experiment`),
		CONSTRAINT
		`param_experiment_fk`
		FOREIGN KEY
		(`experiment`) REFERENCES
		`gloria_services`.`experiment`
		(`idexperiment`) ON DELETE CASCADE ON
		UPDATE CASCADE
		) ENGINE=InnoDB
		DEFAULT CHARSET=utf8
	</update>

	<update id="createExperimentOperationTable">
		CREATE TABLE IF NOT EXISTS
		`gloria_services`.`experiment_operation` (
		`experiment` int(11) NOT
		NULL,
		`operation` varchar(45) NOT NULL,
		`type` varchar(45) NOT
		NULL,
		`idoperation` int(11) NOT NULL
		AUTO_INCREMENT,
		PRIMARY KEY
		(`idoperation`),
		KEY `op_experiment_fk`
		(`experiment`),
		CONSTRAINT
		`op_experiment_fk` FOREIGN KEY
		(`experiment`) REFERENCES
		`gloria_services`.`experiment`
		(`idexperiment`) ON DELETE
		CASCADE ON
		UPDATE CASCADE
		) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT
		CHARSET=utf8
	</update>

	<update id="createExperimentArgumentTable">
		CREATE TABLE IF NOT EXISTS
		`gloria_services`.`experiment_argument` (
		`operation` int(11) NOT NULL,
		`parameter` int(11) NOT NULL,
		`number` int(11) NOT NULL,
		PRIMARY KEY
		(`operation`,`parameter`,`number`),
		KEY `args_parameter_fk`
		(`parameter`),
		KEY `args_operation_fk` (`operation`),
		CONSTRAINT
		`args_operation_fk` FOREIGN KEY (`operation`) REFERENCES
		`gloria_services`.`experiment_operation` (`idoperation`) ON DELETE
		CASCADE ON UPDATE
		CASCADE,
		CONSTRAINT `args_parameter_fk` FOREIGN KEY
		(`parameter`) REFERENCES
		`gloria_services`.`experiment_parameter`
		(`idparameter`) ON DELETE CASCADE ON UPDATE
		CASCADE
		) ENGINE=InnoDB
		DEFAULT CHARSET=utf8
	</update>

	<update id="createExperimentContextTable">
		CREATE TABLE IF NOT EXISTS
		`gloria_services`.`experiment_context` (
		`pid` int(11) NOT NULL,
		`rid`
		int(11) NOT NULL,
		`value` varchar(128) DEFAULT NULL,
		PRIMARY KEY
		(`pid`,`rid`),
		KEY
		`context_parameter_fk` (`pid`),
		KEY
		`context_reservation_fk`
		(`rid`),
		CONSTRAINT `context_parameter_fk`
		FOREIGN KEY
		(`pid`) REFERENCES
		`gloria_services`.`experiment_parameter`
		(`idparameter`) ON DELETE
		CASCADE ON UPDATE
		CASCADE,
		CONSTRAINT
		`context_reservation_fk` FOREIGN
		KEY (`rid`) REFERENCES
		`gloria_services`.`reservation`
		(`idreservation`) ON DELETE CASCADE ON
		UPDATE CASCADE
		) ENGINE=InnoDB
		DEFAULT CHARSET=utf8
	</update>

	<update id="createExperimentResultsTable">
		CREATE TABLE IF NOT EXISTS
		`gloria_services`.`experiment_results` (
		`idresult` int(11) NOT NULL
		AUTO_INCREMENT,
		`value` varchar(200) NOT NULL,
		`date` datetime NOT NULL,
		PRIMARY KEY (`idresult`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8
	</update>

	<update id="createExperimentResultsRelationTable">
		CREATE TABLE IF NOT EXISTS
		`gloria_services`.`experiment_result_relation` (
		`experiment` int(11)
		NOT NULL,
		`user` varchar(45) NOT NULL,
		`reservation` int(11) NOT NULL,
		`result` int(11) NOT NULL,
		`tag` varchar(45) NOT NULL,
		PRIMARY KEY
		(`experiment`,`user`,`reservation`,`result`,`tag`),
		KEY
		`experiment_result_fk_idx` (`experiment`),
		KEY
		`reservation_result_fk_idx` (`reservation`),
		KEY `user_result_fk_idx`
		(`user`),
		KEY `result_result_fk_idx` (`result`),
		CONSTRAINT
		`result_result_fk` FOREIGN KEY (`result`) REFERENCES
		`gloria_services`.`experiment_results` (`idresult`) ON DELETE CASCADE
		ON UPDATE CASCADE,
		CONSTRAINT `experiment_result_fk` FOREIGN KEY
		(`experiment`)
		REFERENCES `gloria_services`.`experiment`
		(`idexperiment`) ON DELETE CASCADE ON UPDATE
		CASCADE,
		CONSTRAINT
		`reservation_result_fk` FOREIGN KEY (`reservation`) REFERENCES
		`gloria_services`.`reservation` (`idreservation`) ON DELETE CASCADE ON
		UPDATE CASCADE,
		CONSTRAINT `user_result_fk` FOREIGN KEY (`user`)
		REFERENCES
		`gloria_services`.`reservation` (`user`) ON DELETE CASCADE
		ON UPDATE CASCADE
		)
		ENGINE=InnoDB DEFAULT CHARSET=utf8
	</update>

	<select id="getExperimentParameter"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ParameterEntry">
		SELECT * FROM
		`gloria_services`.`experiment_parameter`
		WHERE
		experiment=#{experiment_} AND parameter=#{parameter_}
	</select>

	<select id="getParameterById"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ParameterEntry">
		SELECT * FROM
		`gloria_services`.`experiment_parameter`
		WHERE
		idparameter=#{pid_}
	</select>

	<insert id="saveExperimentParameter"
		parameterType="eu.gloria.gs.services.experiment.base.data.dbservices.ParameterEntry">
		INSERT INTO
		`gloria_services`.`experiment_parameter`
		(experiment, parameter, type)
		VALUE (
		#{experiment}, #{parameter},
		#{type} )
	</insert>

	<select id="getAllExperimentParameters"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ParameterEntry">
		SELECT * FROM
		`gloria_services`.`experiment_parameter`
		WHERE
		experiment=#{experiment_}
	</select>

	<select id="getExperimentOperation"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.OperationEntry">
		SELECT * FROM
		`gloria_services`.`experiment_operation`
		WHERE
		experiment=#{experiment_} AND operation=#{operation_}
	</select>

	<insert id="saveExperimentOperation"
		parameterType="eu.gloria.gs.services.experiment.base.data.dbservices.OperationEntry">
		INSERT INTO
		`gloria_services`.`experiment_operation`
		(experiment, operation,
		type)
		VALUE (
		#{experiment}, #{operation},
		#{type} )
	</insert>

	<select id="getAllExperimentOperations"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.OperationEntry">
		SELECT * FROM
		`gloria_services`.`experiment_operation`
		WHERE
		experiment=#{experiment_}
	</select>

	<select id="getParameterContext"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ContextEntry">
		SELECT * FROM
		`gloria_services`.`experiment_context`
		WHERE
		pid=#{pid_} AND
		rid=#{rid_}
	</select>

	<insert id="saveParameterContext"
		parameterType="eu.gloria.gs.services.experiment.base.data.dbservices.ContextEntry">
		INSERT INTO
		`gloria_services`.`experiment_context`
		(pid,
		rid, value)
		VALUE (
		#{pid},
		#{rid}, #{value} )
	</insert>

	<update id="setParameterContextValue">
		UPDATE `gloria_services`.`experiment_context`
		SET
		value=#{value_}
		WHERE pid=#{pid_} AND rid=#{rid_}
	</update>

	<select id="getParameterContextValue" resultType="string">
		SELECT value
		FROM `gloria_services`.`experiment_context`
		WHERE pid=#{pid_} AND
		rid=#{rid_}
	</select>

	<select id="getReservationContext"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ContextEntry">
		SELECT
		pid,rid,value FROM
		`gloria_services`.`experiment_parameter`
		LEFT JOIN
		`gloria_services`.`experiment_context`
		ON
		(experiment_context.pid =
		experiment_parameter.idparameter)
		WHERE
		rid=#{rid_}
	</select>

	<select id="isReservationContextInstantiated" resultType="boolean">
		SELECT
		count(*) > 0
		FROM
		`gloria_services`.`experiment_context`
		WHERE
		rid=#{rid_}
	</select>

	<select id="getOperationArguments"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ArgumentEntry">
		SELECT *
		FROM
		`gloria_services`.`experiment_argument`
		WHERE
		operation=#{opid_}
	</select>

	<insert id="saveOperationArgument"
		parameterType="eu.gloria.gs.services.experiment.base.data.dbservices.ArgumentEntry">
		INSERT INTO
		`gloria_services`.`experiment_argument`
		(operation, parameter, number)
		VALUE (
		#{operation}, #{parameter},
		#{number})
	</insert>

	<select id="getExperiment"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ExperimentEntry">
		SELECT * FROM
		`gloria_services`.`experiment`
		WHERE
		name=#{name_}
	</select>

	<select id="getExperimentId" resultType="int">
		SELECT idexperiment FROM
		`gloria_services`.`experiment`
		WHERE
		name=#{name_}
	</select>

	<select id="getExperimentById"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ExperimentEntry">
		SELECT * FROM
		`gloria_services`.`experiment`
		WHERE
		idexperiment=#{idexperiment_}
	</select>

	<select id="getAllTypeExperiments" resultType="string">
		SELECT name FROM
		`gloria_services`.`experiment`
		WHERE type=#{type_}
	</select>

	<insert id="saveExperiment"
		parameterType="eu.gloria.gs.services.experiment.base.data.dbservices.ExperimentEntry">
		INSERT INTO
		`gloria_services`.`experiment`
		(name, author,
		description, type)
		VALUE (
		#{name}, #{author}, #{description}, #{type} )
	</insert>

	<update id="setExperimentDescription">
		UPDATE `gloria_services`.`experiment`
		SET
		description=#{description_}
		WHERE name
		=#{name_}
	</update>

	<delete id="removeExperiment">
		DELETE FROM `gloria_services`.`experiment`
		WHERE
		name=#{name_}
	</delete>

	<select id="containsExperiment" resultType="boolean">
		SELECT count(*)>0
		FROM
		`gloria_services`.`experiment`
		WHERE
		name=#{name_}
	</select>

	<select id="getUserReservations"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ReservationEntry">
		SELECT * FROM
		`gloria_services`.`reservation`
		WHERE
		user=#{user_} ORDER BY begin
	</select>

	<select id="getUserReservationById"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ReservationEntry">
		SELECT * FROM
		`gloria_services`.`reservation`
		WHERE
		user=#{user_} AND
		idreservation=#{rid_} ORDER BY begin
	</select>

	<select id="getAllReservationsFrom"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ReservationEntry">
		SELECT * FROM
		`gloria_services`.`reservation`
		WHERE begin
		&gt;=#{from_} OR end &gt; #{from_} ORDER BY begin
	</select>

	<select id="getUserReservationsFrom"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ReservationEntry">
		SELECT * FROM
		`gloria_services`.`reservation`
		WHERE
		user=#{user_} AND (begin
		&gt;=#{from_} OR end &gt; #{from_}) ORDER BY
		begin
	</select>

	<select id="getReservation"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ReservationEntry">
		SELECT * FROM
		`gloria_services`.`reservation`
		WHERE
		user=#{user_} AND
		experiment=#{experiment_} AND begin=#{begin_} AND
		end=#{end_}
	</select>

	<select id="getReservationById"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ReservationEntry">
		SELECT * FROM
		`gloria_services`.`reservation`
		WHERE
		idreservation=#{rid_}
	</select>

	<select id="containsReservation" resultType="boolean">
		SELECT count(*)>0
		FROM
		`gloria_services`.`reservation`
		WHERE
		user=#{user_} AND
		experiment=#{experiment_} AND begin=#{begin_} AND end=#{end_}
	</select>

	<select id="anyReservationAt" resultType="boolean">
		SELECT count(*)>0
		FROM
		`gloria_services`.`reservation`
		WHERE begin &lt;=
		#{when_} AND end &gt;=
		#{when_}
	</select>

	<select id="anyUserReservationAt" resultType="boolean">
		SELECT count(*)>0
		FROM
		`gloria_services`.`reservation`
		WHERE
		user=#{user_} AND begin &lt;=
		#{when_} AND end &gt;= #{when_}
	</select>

	<select id="getUserReservationAt"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ReservationEntry">
		SELECT *
		FROM
		`gloria_services`.`reservation`
		WHERE
		user=#{user_} AND begin &lt;=
		#{when_} AND end &gt;= #{when_}
	</select>

	<select id="getAllReservationsAt"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ReservationEntry">
		SELECT *
		FROM
		`gloria_services`.`reservation`
		WHERE
		begin &lt;=
		#{when_} AND end &gt;=
		#{when_}
	</select>

	<select id="getAllReservationsBefore"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ReservationEntry">
		SELECT *
		FROM
		`gloria_services`.`reservation`
		WHERE
		begin &lt;=
		#{when_} AND end &lt;=
		#{when_}
	</select>

	<select id="anyRTReservationBetween" resultType="boolean">
		SELECT
		count(*)>0
		FROM `gloria_services`.`reservation`
		LEFT JOIN
		`gloria_services`.`rt_reservation`
		ON (rt_reservation.reservation_id =
		reservation.idreservation)
		WHERE
		rt_name=#{rt_} AND ((begin &lt;
		#{from_} AND end &gt; #{from_}) OR
		(begin &gt; #{from_} AND begin &lt;
		#{to_}) OR (begin &lt;= #{from_} AND end
		&gt;= #{to_}))
	</select>

	<select id="getAllReservationsUntil"
		resultType="eu.gloria.gs.services.experiment.base.data.dbservices.ReservationEntry">
		SELECT
		idreservation,user,experiment,begin,end
		FROM
		`gloria_services`.`reservation`
		LEFT JOIN
		`gloria_services`.`rt_reservation`
		ON (rt_reservation.reservation_id =
		reservation.idreservation)
		WHERE
		rt_name=#{rt_} AND (begin &lt;=
		#{until_}
		AND end &lt;=#{until_})
	</select>

	<insert id="saveReservation"
		parameterType="eu.gloria.gs.services.experiment.base.data.dbservices.ReservationEntry">
		INSERT INTO
		`gloria_services`.`reservation`
		(user,
		experiment, begin, end)
		VALUE (
		#{user}, #{experiment}, #{begin},
		#{end})
	</insert>

	<insert id="saveRTReservation">
		INSERT INTO
		`gloria_services`.`rt_reservation`
		(reservation_id, rt_name)
		VALUE (
		#{reservation_id_}, #{rt_name_})
	</insert>

	<select id="getAllRTOfReservation" resultType="string">
		SELECT rt_name
		FROM
		`gloria_services`.`rt_reservation`
		WHERE
		reservation_id =#{rid_}
	</select>

	<delete id="removeReservation">
		DELETE FROM `gloria_services`.`reservation`
		WHERE
		idreservation=#{rid_}
	</delete>

	<delete id="removeReservationContext">
		DELETE FROM `gloria_services`.`experiment_context`
		WHERE
		rid=#{rid_}
	</delete>


</mapper>
